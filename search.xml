<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Spring源码分析（一）</title>
      <link href="article/9439442c.html"/>
      <url>article/9439442c.html</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=21253900&auto=0&height=66"></iframe><h2 id="一、源码下载与编译"><a href="#一、源码下载与编译" class="headerlink" title="一、源码下载与编译"></a>一、源码下载与编译</h2><h3 id="Mac下Gradle的安装与配置"><a href="#Mac下Gradle的安装与配置" class="headerlink" title="Mac下Gradle的安装与配置"></a>Mac下Gradle的安装与配置</h3><p>​    进入Gradle官网，选择安装版本，Binary-only下载压缩包。</p><p>​    将在指定目录下解压，然后配置环境变量。</p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 进入用户目录下的配置文件</span><br><span class="line">vim ~&#x2F;.bash_profile</span><br><span class="line"># 修改.bash_profile文件, 在文件的最后加上如下配置: </span><br><span class="line"># export GRADLE&#x3D;&#x2F;指定路径&#x2F;gradle-6.0.1</span><br><span class="line"># export PATH&#x3D;$PATH:$GRADLE&#x2F;bin</span><br><span class="line"># 修改后, 按[Esc], 命令&quot;:wq&quot;保存退出, 并在终端使用如下命令使配置生效:</span><br><span class="line">source ~&#x2F;.bash_profile</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><a id="more"></a><h4 id="bash-profile找不到"><a href="#bash-profile找不到" class="headerlink" title=".bash_profile找不到"></a>.bash_profile找不到</h4><p>​    直接vim ~/.bash_profile进入的是空文件，而且.bash_profile是隐藏文件，没有开启显示的情况下访达不能直接搜索到。</p><p>​    查阅资料都是说如果找不到就自己新建一个，但环境变量如果消失的话，应该是除了cd以外的命令均无法使用。并且我之前配置的java环境变量使用-version命令能够正常显示，说明.bash_profile文件应该还存在并且生效。</p><p>​    最后发现，由于我此时使用的是提权的root用户，～进入的是/var/root路径。新打开一个终端，使用普通用户访问～路径，进入的是/Users/用户名目录。此时能够正常访问到之前设置的.bash_profile文件。</p><h2 id="Spring源码下载"><a href="#Spring源码下载" class="headerlink" title="Spring源码下载"></a>Spring源码下载</h2><p>​    1.在指定位置新建文件夹，终端进入后输入以下语句以进行下载。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;gitee.com&#x2F;mirrors&#x2F;Spring-Framework.git</span><br></pre></td></tr></table></figure><p>2.cd进入下载的Spring源码路径执行gradle命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gradle objenesisRepackJar</span><br><span class="line">gradle cglibRepackJar</span><br><span class="line">gradlew :spring-oxm:compileTestJava</span><br></pre></td></tr></table></figure><hr><h3 id="可能出现的问题："><a href="#可能出现的问题：" class="headerlink" title="可能出现的问题："></a>可能出现的问题：</h3><p>1、Could not determine the dependencies of task ‘:spring-oxm:compileTestKotlin’.</p><p><img src="/article/9439442c/image-20201115143844838.png" alt="image-20201115143844838"></p><p>解决方法：</p><p>​    由于我使用的是最新版本Gradle，所以需要下载最新版本Spring源码进行编译，或者对Gradle进行降级。</p><hr><p>2、Could not determine the dependencies of task ‘:spring-core:objenesisRepackJar’.</p><p><img src="/article/9439442c/image-20201115144348247.png" alt="image-20201115144348247"></p><p>解决方法：</p><p>​    运行gradle objenesisRepackJar，然后重新执行gradlew :spring-oxm:compileTestJava</p><hr><p>3、Could not GET ‘xxx’.Read timed out</p><p><img src="/article/9439442c/image-20201115144532777.png" alt="image-20201115144532777"></p><p>解决方法：</p><p>​    网络问题导致超时，重新执行gradlew :spring-oxm:compileTestJava直到编译成功</p><p>4、连续编译失败（网络问题）</p><p><img src="/article/9439442c/image-20201115160644761.png" alt="image-20201115160644761"></p><p>解决方法：</p><p>​    分别单独执行gradlew :spring-oxm:compileJava，gradlew :spring-core:compileTestFixturesKotlin以及gradlew :spring-aop:compileJava。</p><p>​    执行完成后重新执行gradlew :spring-oxm:compileTestJava直到编译成功</p><hr><p>最终结果</p><p><img src="/article/9439442c/image-20201115172915609.png" alt="image-20201115172915609"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>​    此次源码下载与编译花费了我大量时间，从早上十点到下午五点半才最终编译成功。</p><p>​    最大的问题就是第一个，由于Gradle版本过于新，导致较旧的spring源码无法正常编译。网上直接搜索所报错误，基本上都是安卓相关，没有任何参考价值。</p><p>​    其次就是编译过程中jar包下载，让我感觉回到了15年前拨号上网的时候。不仅下载巨慢，而且期间不断报错，一遍遍重新编译的过程中耗费了我非常多的精力。</p><p>​    尤其是在最后98%阶段的byte-buddy-1.10.15.jar包，只有3.3m的大小，但从下载到最终结束一共花费了两个多小时。因为每次下载到最后总会报出ssl管道异常关闭的错误，不得不一遍遍重复。</p><p><img src="/article/9439442c/image-20201115174014323.png" alt="image-20201115174014323"></p><hr><p>​    现在是晚上12点，idea终于开始正常编译了，以下是经验教训。</p><ul><li><p>​    最新版本的Gradle+最新版本的Spring可以完成编译，但是idea无法正常导入。一开始我以为是编译慢的原因，结果编译了两个小时还没动静，就重新开始查阅资料，一遍一遍的重装。最后发现，还得把<strong>idea的版本升级到最新</strong>，才能正常导入。</p><p>​    此处借鉴<a href="https://blog.csdn.net/qq_38425803/article/details/109670018">夯实Spring（五） | 搭建Spring源码环境</a></p></li><li><p>  Gradle编译前，可以通过设置阿里云镜像提速，不然得像我一样下载几个小时</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">在下载好的Spring源码文件夹里的build.gradle 加上</span><br><span class="line">allprojects &#123;</span><br><span class="line">repositories &#123;</span><br><span class="line">maven&#123; url &#39;http:&#x2F;&#x2F;maven.aliyun.com&#x2F;nexus&#x2F;content&#x2F;groups&#x2F;public&#x2F;&#39;&#125;</span><br><span class="line">maven &#123; url &#39;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;gradle-plugin&#39; &#125;</span><br><span class="line">maven &#123; url &#39;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;google&#39; &#125;</span><br><span class="line">maven &#123; url &#39;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;jcenter&#39;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/article/9439442c/image-20201116002343235.png" alt="image-20201116002343235"></p><p>​    至于有没有效果，因为我已经下载过了，所以不清楚提速有多快。</p><ul><li>通过设置本地Gradle，避免idea从网页重复下载</li></ul><p><img src="/article/9439442c/image-20201116002545689.png" alt="image-20201116002545689"></p><hr><h3 id="截图留念"><a href="#截图留念" class="headerlink" title="截图留念"></a>截图留念<img src="/article/9439442c/image-20201116003207637.png" alt="image-20201116003207637"></h3>]]></content>
      
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>与其不断的规划，我决定先行动起来</title>
      <link href="article/a4b9cf5f.html"/>
      <url>article/a4b9cf5f.html</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=22842399&auto=1&height=66"></iframe><p><em>这是一篇关于我的故事</em></p><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>​    我决定开设个人博客了。工作两年多以来，从我正式入职开始，公司就没有把我当作新人使用。无止境的产品更新需求，开发过程中遇到的各类bug，客户的对接…由于工作任务繁重，初始薪资太低，生存下去成为了我在北京最首要的任务。</p><a id="more"></a><h2 id="第一年"><a href="#第一年" class="headerlink" title="第一年"></a>第一年</h2><p>​    入职第一年，我所有的时间全部花在解决公司项目的问题上面。</p><p>​    经历过连续一个半月的凌晨三点到家，七点爬起来去上班。调试解决过无数奇异bug，总结编写了许多文档。对接了许多客户，尽心尽力为其解决问题。</p><p>​    凭借个人努力，这一年期间我摸透了项目各种需求流程，独自开发了多项功能业务模块。虽然我在项目开发中越来越得心应手，但由于我所在的项目组所用技术较老，个人提升实在有限。</p><p>​    这一年间最大的任务和收获，是由我独自负责对接深信服接口。由我开发的接口项目，无论是对接还是验收都是最快和运行最稳定的。</p><h2 id="第二年"><a href="#第二年" class="headerlink" title="第二年"></a>第二年</h2><p>​    时间进入到第二年，收入接近翻了一倍，虽然起薪很低，但至少不用一餐只敢点十多块的外卖了。    第二年开始，对于交给我的需求与任务，我已经能非常轻松的完成开发。由于疫情原因，团队组织架构调整。我开始担任小组长，初期领导了一个十人小组。我手下的组员，由于大部分都是新人，除了开发任务外，我还注重其能力提升培养。</p><p>​    年初的工作任务实在是非常繁忙，连续三个月不间断上班，每天15个小时以上的工作时长，我一共只休息了两天。这期间由于护网要求，以及深信服被爆出0day漏洞的原因，我们项目需要进行安全性的整体提升。</p><p>​    由于第一年我有项目漏洞处理经验，三个月时间，我组人员在我带领下对项目进行了整体改造。最终达到了安全基线的所有要求，解决了一系列web漏洞相关问题。由我负责的漏洞修补工作，使得我们产品在护网期间没有报出任何问题，这三个月时间，对于web安全相关知识收获颇多。</p><p>​    如果说第一年实在是为工作任务所迫，没有时间进行其他方面的提升。那么第二年后半期，在漏洞处理解决后，向管理岗转化的时候，我开始有了大把时间，却变得稍有懈怠，进入了一个舒适区陷阱。</p><h3 id="惊醒"><a href="#惊醒" class="headerlink" title="惊醒"></a>惊醒</h3><p>​    日子一天天过去，曾经我有计划工作积攒经验三年后跳槽，我向往着阿里，字节，腾讯，微软等大厂。之前也对其招聘标准有一个模糊的概念，那就是我现在的技术不足以去面试，但我所掌握的东西距离所需技术究竟缺少多少呢？我并没有很清楚的认识到。</p><p>​    打开招聘网站，社招除了工作经验的要求外，各种所需技术就是轻飘飘的一句话，但这一句话的背后，所需要掌握的知识绝对是海量的。</p><p>​    某一天看番后闲着没事干，我打开了b站搜索java面试。其中尚硅谷周阳老师的面试指导第一章节就把我骂得头破血流，我这时我才明白，我之前两年的工作经验，对于当前的公司，我是重要的人才。因为我熟练掌握项目需求，开发所需技能。但实际上，我只是一个普通的CRUD工程师而已。为数不多的有价值技能，是我对待工作的认真态度，web漏洞的修复经验，工作期间见到的各类bug而已。</p><h3 id="决意"><a href="#决意" class="headerlink" title="决意"></a>决意</h3><p>​    我决定制定计划，从基础开始覆盖整个java高级工程师所需技术栈，用五至十个月时间，完整掌握所有相关内容。</p><p>​    由于目前有新项目在身，我首先要以公司工作内容为主，每天所有业余时间拿来学习。如果工作内容占用时间不是很多，快速掌握的情况下，也许可以冲击春招（5个月），如果工作内容繁重，那就只能以工作内容为主，冲击明年的秋招。</p><p>​    学习过程中所有资料，将会整理并发布到该个人博客。</p><p>​    </p>]]></content>
      
      
      
        <tags>
            
            <tag> 初めて </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
